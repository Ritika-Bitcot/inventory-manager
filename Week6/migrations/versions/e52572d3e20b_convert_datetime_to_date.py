"""convert datetime to date

Revision ID: e52572d3e20b
Revises: 90d113c6bf2e
Create Date: 2025-08-19 16:05:58.925271

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e52572d3e20b"
down_revision = "90d113c6bf2e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("electronic_products", schema=None) as batch_op:
        batch_op.alter_column(
            "purchase_date",
            existing_type=postgresql.TIMESTAMP(),
            type_=sa.Date(),
            existing_nullable=False,
        )

    with op.batch_alter_table("food_products", schema=None) as batch_op:
        batch_op.alter_column(
            "mfg_date",
            existing_type=postgresql.TIMESTAMP(),
            type_=sa.Date(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "expiry_date",
            existing_type=postgresql.TIMESTAMP(),
            type_=sa.Date(),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("food_products", schema=None) as batch_op:
        batch_op.alter_column(
            "expiry_date",
            existing_type=sa.Date(),
            type_=postgresql.TIMESTAMP(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "mfg_date",
            existing_type=sa.Date(),
            type_=postgresql.TIMESTAMP(),
            existing_nullable=False,
        )

    with op.batch_alter_table("electronic_products", schema=None) as batch_op:
        batch_op.alter_column(
            "purchase_date",
            existing_type=sa.Date(),
            type_=postgresql.TIMESTAMP(),
            existing_nullable=False,
        )

    # ### end Alembic commands ###
